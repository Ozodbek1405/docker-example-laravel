version: '3.8'

services:
    example_app:
        build:
            dockerfile: Dockerfile
        image: example_project
        container_name: laravel_app
        working_dir: /var/www/example
        volumes:
            - .:/var/www/example
        depends_on:
            - mysql
            - redis
            - elasticsearch

    mysql:
        image: mysql:8.0
        container_name: mysql_example
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: laravel_db
            MYSQL_ROOT_PASSWORD: root-password
            MYSQL_USER: laravel-user
            MYSQL_PASSWORD: password
        ports:
            - "3308:3306"
        volumes:
            - db_data:/var/lib/mysql

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin_example
        restart: always
        environment:
            PMA_HOST: mysql_example
            MYSQL_ROOT_PASSWORD: root-password
        ports:
            - "8086:80"
        depends_on:
            - mysql

    redis:
        image: redis:alpine
        container_name: redis
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ports:
            - "9200:9200"
            - "9300:9300"

    webserver:
        image: nginx:alpine
        container_name: nginx_webserver
        volumes:
            - .:/var/www/example
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - "8081:80"
        depends_on:
            - example_app

volumes:
    db_data:
    redis_data:
